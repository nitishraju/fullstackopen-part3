{"version":3,"sources":["components/PersonsForm.js","components/PersonsList.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["TextInput","text","value","handler","onChange","PersonForm","submitHandler","nameVal","nameHandler","phoneVal","phoneHandler","onSubmit","type","Persons","personObject","deleteHandler","name","number","onClick","PersonsList","personsList","map","Notification","message","notifStyle","color","includes","split","background","fontSize","borderStyle","borderRadius","padding","marginBottom","className","style","baseURL","_getData","response","data","personService","getAll","axios","get","then","addPerson","post","updatePerson","id","put","deletePerson","delete","Filter","filter","filterHandler","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","setFilter","notifMsg","setNotifMsg","useEffect","existingPersons","personsToShow","toUpperCase","event","target","preventDefault","existingPerson","length","responsePerson","concat","setTimeout","catch","error","window","confirm","updatedPerson","newPersons","alert","changedPersons","ReactDOM","render","document","getElementById"],"mappings":"oLAEMA,EAAY,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChC,OACE,gCACGF,EADH,KACU,uBAAOC,MAAOA,EAAOE,SAAUD,QAiB9BE,EAZI,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,cAAeC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACnE,OACE,uBAAMC,SAAUL,EAAhB,UACE,cAAC,EAAD,CAAWL,KAAK,OAAOC,MAAOK,EAASJ,QAASK,IAChD,cAAC,EAAD,CAAWP,KAAK,QAAQC,MAAOO,EAAUN,QAASO,IAClD,8BACE,wBAAQE,KAAK,SAAb,uBCdFC,EAAU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAC/B,OACE,gCACGD,EAAaE,KADhB,IACuBF,EAAaG,OAClC,wBACEL,KAAK,SACLM,QAASH,EAFX,wBAqBSI,EAdK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaL,EAAoB,EAApBA,cAClC,OACE,8BACGK,EAAYC,KAAI,SAACP,GAAD,OACf,cAAC,EAAD,CAEEA,aAAcA,EACdC,cAAe,kBAAMA,EAAcD,KAF9BA,EAAaE,YCcbM,EA9BM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,GAAgB,OAAZA,EACJ,OAAO,KAGP,IAQMC,EAAa,CACjBC,MARE,CAAC,QAAS,UAAW,WAAWC,SAASH,EAAQI,MAAM,KAAK,IACnD,QAGA,MAKXC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAGhB,OACA,qBAAKC,UAAU,QAAQC,MAAOX,EAA9B,SACGD,K,gBC1BCa,EAAU,eAEVC,EAAW,SAACC,GAAD,OAAcA,EAASC,MAqBzBC,EAFO,CAAEC,OAjBT,WACb,OAAOC,IAAMC,IAAIP,GAASQ,KAAKP,IAgBDQ,UAbd,SAAC/B,GACjB,OAAO4B,IAAMI,KAAKV,EAAStB,GAAc8B,KAAKP,IAYLU,aATtB,SAACjC,GACpB,IAAMkC,EAAKlC,EAAakC,GACxB,OAAON,IAAMO,IAAN,UAAab,EAAb,YAAwBY,GAAMlC,GAAc8B,KAAKP,IAODa,aAJpC,SAACF,GACpB,OAAON,IAAMS,OAAN,UAAgBf,EAAhB,YAA2BY,MCZ9BI,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACxB,OACE,2CACU,uBAAOpD,MAAOmD,EAAQjD,SAAUkD,QA6H/BC,EAxHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIYN,mBAAS,IAJrB,mBAITH,EAJS,KAIDU,EAJC,OAKgBP,mBAAS,MALzB,mBAKTQ,EALS,KAKCC,EALD,KAOhBC,qBAAU,WACR1B,EACGC,SACAG,MAAK,SAAAuB,GAAe,OAAIT,EAAWS,QACrC,IAEH,IAqFMC,EAAgBX,EAAQJ,QAAO,SAACvC,GAAD,OAAkBA,EAAaE,KAAKqD,cAAc3C,SAAS2B,EAAOgB,kBAEvG,OACE,gCACE,2CACA,cAAC,EAAD,CAAc9C,QAASyC,IACvB,cAAC,EAAD,CAAQX,OAAQA,EAAQC,cAPN,SAACgB,GAAD,OAAWP,EAAUO,EAAMC,OAAOrE,UAQpD,kDACA,cAAC,EAAD,CACEI,cA5FgB,SAACgE,GAGrB,GAFAA,EAAME,iBAEU,KAAZb,GAA+B,KAAbE,EAAtB,CAKA,IAAMY,EAAiBhB,EAAQJ,QAAO,SAAAvC,GAAY,OAAIA,EAAaE,OAAS2C,KAC5E,GAA8B,IAA1Bc,EAAeC,OAgCnBlC,EACGK,UAAU,CAAC7B,KAAM2C,EAAS1C,OAAQ4C,IAClCjB,MAAK,SAAA+B,GACJjB,EAAWD,EAAQmB,OAAOD,IAC1Bf,EAAW,IACXE,EAAY,IAEZ,IAAMvC,EAAO,iBAAaoD,EAAe3D,KAA5B,KACbiD,EAAY1C,GACZsD,YAAW,kBAAMZ,EAAY,QAAO,QAErCa,OAAM,SAAAC,GACL,IAAMxD,EAAUwD,EAAMzC,SAASC,KAAKwC,MACpCd,EAAY1C,GACZsD,YAAW,kBAAMZ,EAAY,QAAO,aA5CtC,GADkBe,OAAOC,QAAP,UAAkBtB,EAAlB,iEACH,CACb,IAAIuB,EAAgBT,EAAe,GAwBnC,OAvBAS,EAAa,2BAAOA,GAAP,IAAsBjE,OAAQ4C,SAE3CrB,EACGO,aAAamC,GACbtC,MAAK,SAAAN,GACJ,IAAM6C,EAAa1B,EAAQpC,KAAI,SAACP,GAAD,OAAkBA,EAAaE,OAASkE,EAAclE,KAAOkE,EAAgBpE,KAC5G4C,EAAWyB,GACXvB,EAAW,IACXE,EAAY,IAEZ,IAAMvC,EAAO,mBAAeoC,EAAf,KACbM,EAAY1C,GACZsD,YAAW,kBAAMZ,EAAY,QAAO,QAErCa,OAAM,SAAAC,GACLrB,EAAWD,EAAQJ,QAAO,SAACvC,GAAD,OAAkBA,EAAaE,OAAS2C,MAClEC,EAAW,IACXE,EAAY,IAEZ,IAAMvC,EAAO,8BAA0BoC,EAA1B,8BACbM,EAAY1C,GACZsD,YAAW,kBAAMZ,EAAY,QAAO,cA9B1CmB,MAAM,0CAyFJ7E,QAASoD,EAASnD,YA/FJ,SAAC8D,GAAD,OAAWV,EAAWU,EAAMC,OAAOrE,QAgGjDO,SAAUoD,EAAUnD,aA/FL,SAAC4D,GAAD,OAAWR,EAAYQ,EAAMC,OAAOrE,UAiGrD,yCACA,cAAC,EAAD,CACEkB,YAAagD,EACbrD,cAxCgB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAMgC,EAAQ,EAARA,GAE5B,GADkBgC,OAAOC,QAAP,iBAAyBjE,EAAzB,MAClB,CACEwB,EAAcU,aAAaF,GACxBJ,MAAK,WACJ,IAAMrB,EAAO,mBAAeP,EAAf,KACbiD,EAAY1C,GACZsD,YAAW,kBAAMZ,EAAY,QAAO,QAErCa,OAAM,WACL,IAAMvD,EAAO,8BAA0BP,EAA1B,8BACbiD,EAAY1C,GACZsD,YAAW,kBAAMZ,EAAY,QAAO,KAEpCP,EAAWD,EAAQJ,QAAO,SAACvC,GAAD,OAAkBA,EAAaE,OAASA,SAGtE,IAAMqE,EAAiB5B,EAAQJ,QAAO,SAACvC,GAAD,OAAkBA,EAAakC,KAAOA,KAC5EU,EAAW2B,W,MCtGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b1c28e2.chunk.js","sourcesContent":["import React from 'react'\n\nconst TextInput = ({ text, value, handler }) => {\n  return (\n    <div>\n      {text}: <input value={value} onChange={handler} />\n    </div>\n  )\n}\n  \nconst PersonForm = ({ submitHandler, nameVal, nameHandler, phoneVal, phoneHandler }) => {\n  return (\n    <form onSubmit={submitHandler} >\n      <TextInput text=\"Name\" value={nameVal} handler={nameHandler} />\n      <TextInput text=\"Phone\" value={phoneVal} handler={phoneHandler} />\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ personObject, deleteHandler }) => {\n  return (\n    <div>\n      {personObject.name} {personObject.number}\n      <button \n        type=\"button\" \n        onClick={deleteHandler}>Delete</button>\n    </div>\n  )\n}\n  \nconst PersonsList = ({ personsList, deleteHandler }) => {\n  return (\n    <div>\n      {personsList.map((personObject) =>\n        <Persons \n          key={personObject.name} \n          personObject={personObject} \n          deleteHandler={() => deleteHandler(personObject)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default PersonsList","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n  return null\n  }\n  \n  let msgColor = null\n  if (['Added', 'Deleted', 'Updated'].includes(message.split(':')[0])) {\n    msgColor = 'green'\n  }\n  else {\n    msgColor = 'red'\n  }\n  \n  const notifStyle = {\n    color: msgColor,\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  \n  return (\n  <div className=\"error\" style={notifStyle}>\n    {message}\n  </div>\n  )\n}\n\nexport default Notification ","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst _getData = (response) => response.data\n\nconst getAll = () => {\n  return axios.get(baseURL).then(_getData)\n}\n\nconst addPerson = (personObject) => {\n  return axios.post(baseURL, personObject).then(_getData)\n}\n\nconst updatePerson = (personObject) => {\n  const id = personObject.id\n  return axios.put(`${baseURL}/${id}`, personObject).then(_getData)\n}\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseURL}/${id}`)\n}\n\nconst personService = { getAll, addPerson, updatePerson, deletePerson }\n\nexport default personService","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonsForm'\nimport PersonsList from './components/PersonsList'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst Filter = ({ filter, filterHandler }) => {\n  return (\n    <div>\n      Search: <input value={filter} onChange={filterHandler} />\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notifMsg, setNotifMsg] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(existingPersons => setPersons(existingPersons))\n  }, [])\n\n  const nameHandler = (event) => setNewName(event.target.value)\n  const phoneHandler = (event) => setNewPhone(event.target.value)\n  const submitHandler = (event) => {\n    event.preventDefault()\n    \n    if (newName === '' || newPhone === '') {\n      alert('Please enter a value for both fields.')\n      return\n    }\n\n    const existingPerson = persons.filter(personObject => personObject.name === newName)\n    if (existingPerson.length !== 0) {\n      const selection = window.confirm(`${newName} already in phonebook. Replace old number with given number?`)\n      if (selection) {\n        let updatedPerson = existingPerson[0]\n        updatedPerson = {...updatedPerson, number: newPhone}\n\n        personService\n          .updatePerson(updatedPerson)\n          .then(response => {\n            const newPersons = persons.map((personObject) => personObject.name === updatedPerson.name ? updatedPerson : personObject)\n            setPersons(newPersons)\n            setNewName('')\n            setNewPhone('')\n\n            const message = `Updated: ${newName}.`\n            setNotifMsg(message)\n            setTimeout(() => setNotifMsg(null), 5000)\n          })\n          .catch(error => {\n            setPersons(persons.filter((personObject) => personObject.name !== newName))\n            setNewName('')\n            setNewPhone('')\n\n            const message = `The information for ${newName} has already been deleted.`\n            setNotifMsg(message)\n            setTimeout(() => setNotifMsg(null), 5000)\n          })\n        return\n      }\n      else { return }\n    }\n\n    personService\n      .addPerson({name: newName, number: newPhone})\n      .then(responsePerson => {\n        setPersons(persons.concat(responsePerson))\n        setNewName('')\n        setNewPhone('')\n\n        const message = `Added: ${responsePerson.name}.`\n        setNotifMsg(message)\n        setTimeout(() => setNotifMsg(null), 5000)\n      })\n      .catch(error => {\n        const message = error.response.data.error\n        setNotifMsg(message)\n        setTimeout(() => setNotifMsg(null), 5000)\n      })\n  }\n\n  const deleteHandler = ({name, id}) => {\n    const selection = window.confirm(`Delete ${name}?`)\n    if (selection) {\n      personService.deletePerson(id)\n        .then(() => {\n          const message = `Deleted: ${name}.`\n          setNotifMsg(message)\n          setTimeout(() => setNotifMsg(null), 5000)\n        })\n        .catch(() => {\n          const message = `The information for ${name} has already been deleted.`\n          setNotifMsg(message)\n          setTimeout(() => setNotifMsg(null), 5000)\n\n          setPersons(persons.filter((personObject) => personObject.name !== name))\n        })\n\n      const changedPersons = persons.filter((personObject) => personObject.id !== id)\n      setPersons(changedPersons)\n    }\n    else { return }\n  }\n\n  const filterHandler = (event) => setFilter(event.target.value)\n  const personsToShow = persons.filter((personObject) => personObject.name.toUpperCase().includes(filter.toUpperCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifMsg} />\n      <Filter filter={filter} filterHandler={filterHandler} />\n      <h3>Add a new person</h3>\n      <PersonForm\n        submitHandler={submitHandler}\n        nameVal={newName} nameHandler={nameHandler}\n        phoneVal={newPhone} phoneHandler={phoneHandler}\n      />\n      <h2>Numbers</h2>\n      <PersonsList \n        personsList={personsToShow} \n        deleteHandler={deleteHandler}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}